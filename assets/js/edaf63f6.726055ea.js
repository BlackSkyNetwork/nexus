"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[2804],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),m=s,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2018:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var n=r(7462),s=r(3366),a=(r(7294),r(3905)),i=["components"],o={sidebar_position:1,sidebar_label:"Ephemeral Addresses",description:"Ephemeral Addresses for Public Interactions",image:"/img/00000001/banner_issue01.png",tags:["Post-Web"]},l="Ephemeral Addresses for Public Interactions",c={unversionedId:"wiki/Post-Web Patterns/ephemeral-addresses",id:"wiki/Post-Web Patterns/ephemeral-addresses",title:"Ephemeral Addresses for Public Interactions",description:"Ephemeral Addresses for Public Interactions",source:"@site/docs/wiki/Post-Web Patterns/ephemeral-addresses.mdx",sourceDirName:"wiki/Post-Web Patterns",slug:"/wiki/Post-Web Patterns/ephemeral-addresses",permalink:"/wiki/Post-Web Patterns/ephemeral-addresses",editUrl:"https://github.com/BlackSkyNetwork/nexus/edit/main/docs/wiki/Post-Web Patterns/ephemeral-addresses.mdx",tags:[{label:"Post-Web",permalink:"/tags/post-web"}],version:"current",lastUpdatedAt:1687902344,formattedLastUpdatedAt:"6/27/2023",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Ephemeral Addresses",description:"Ephemeral Addresses for Public Interactions",image:"/img/00000001/banner_issue01.png",tags:["Post-Web"]},sidebar:"tutorialSidebar",previous:{title:"Autonomous Ecologies: Urbit Onboarding Guide",permalink:"/wiki/autonomous-ecologies-urbit-onboarding"},next:{title:"Private Bridging",permalink:"/wiki/Post-Web Patterns/private-bridging"}},p={},d=[],u={toc:d};function m(e){var t=e.components,r=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ephemeral-addresses-for-public-interactions"},"Ephemeral Addresses for Public Interactions"),(0,a.kt)("span",{class:"doc-subtitle"},"Post-Web Pattern"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"NOTE: This pattern is a work in progress and needs to be further clarified and enhanced.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Overview"),': In a wallet interface designed for privacy, use a default address as the primary "indexed address" and reserve ephemeral addresses for single-use scenarios, especially when engaging in public interactions, such as incoming cross-chain transfers.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Details"),": The wallet interface should display the default address for general use while keeping ephemeral addresses hidden or less accessible. These ephemeral addresses are intended for one-time use in more publicly visible transactions, such as incoming cross-chain transfers. The wallet interface should be designed to abstract ephemeral address usage from the user and avoid using the default address in public interactions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Benefits"),": By associating public transactions with ephemeral addresses, any future actions using those funds within the system remain completely shielded, enhancing privacy."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Technical Dependency"),": The address key structure must be similar to the Zcash Sapling design to implement this pattern effectively."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example"),": This pattern is inspired by ",(0,a.kt)("a",{parentName:"p",href:"../../zine/00000001/penumbra-protocol#addresses-and-keys"},"Penumbra's design"),", which employs ephemeral addresses for specific public interactions."))}m.isMDXComponent=!0}}]);